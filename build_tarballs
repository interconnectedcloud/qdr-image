#!/usr/bin/bash


do_patch () {
    PATCH_DIR=$1
    PATCH_SRC=$2
    if [ -d "${PATCH_DIR}" ]
    then
        for patch in $(find ${PATCH_DIR} -type f -name "*.patch"); do
            echo Applying patch ${patch}
            patch -f -d "${PATCH_SRC}" -p1 < $patch
        done;
    fi
}

BASE=`dirname $0`
ABS_BASE=`cd $BASE && pwd`
WORKING=`pwd`
OUTDIR=${3:-$ABS_BASE}

wget ${1:-http://github.com/apache/qpid-dispatch/archive/master.tar.gz} -O qpid-dispatch.tar.gz
wget ${2:-http://github.com/apache/qpid-proton/archive/master.tar.gz} -O qpid-proton.tar.gz

mkdir -p qpid-dispatch-src qpid-proton-src build staging proton_build proton_install
tar -zxf qpid-proton.tar.gz -C qpid-proton-src --strip-components 1
tar -zxf qpid-dispatch.tar.gz -C qpid-dispatch-src --strip-components 1

do_patch "patches/proton" qpid-proton-src
do_patch "patches/dispatch" qpid-dispatch-src

cd proton_build
cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DBUILD_CPP=OFF -DBUILD_RUBY=OFF -DBUILD_GO=OFF -DCMAKE_INSTALL_PREFIX=/usr -DSYSINSTALL_PYTHON=ON -DBUILD_TLS=ON $WORKING/qpid-proton-src/ \
    && make \
    && make DESTDIR=$WORKING/proton_install install \
    && tar -z -C $WORKING/proton_install -cf $OUTDIR/qpid-proton-image.tar.gz usr \
    && make install
cd $WORKING/build
cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DUSE_LIBWEBSOCKETS=ON -DBUILD_DOCS=OFF -DCONSOLE_INSTALL=ON -DCMAKE_INSTALL_PREFIX=/usr $WORKING/qpid-dispatch-src/ \
    && make  \
    && make DESTDIR=$WORKING/staging/ install \
    && tar -z -C $WORKING/staging/ -cf $OUTDIR/qpid-dispatch-image.tar.gz usr etc
